---
import { tracks, talks } from '../data/tracks';

const trackColors = [
  { bg: 'bg-devfest-blue/10', border: 'border-devfest-blue', text: 'text-devfest-blue' },
  { bg: 'bg-devfest-red/10', border: 'border-devfest-red', text: 'text-devfest-red' },
  { bg: 'bg-devfest-green/10', border: 'border-devfest-green', text: 'text-devfest-green' },
  { bg: 'bg-devfest-yellow/10', border: 'border-devfest-yellow', text: 'text-devfest-yellow' },
];
---

<section id="tracks" class="py-16 bg-white">
  <div class="container mx-auto px-4">
    <div class="text-center mb-12">
      <h2 class="text-4xl font-bold mb-4">
        <span class="text-devfest-green">Tracks &</span>
        <span class="text-devfest-yellow"> Talks</span>
      </h2>
      <p class="text-gray-600 max-w-2xl mx-auto">
        Scopri i talk e i workshop organizzati per track tematiche. Un'intera giornata dedicata alla tecnologia!
      </p>
    </div>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      {tracks.map((track, index) => {
        const colors = trackColors[index % trackColors.length];
        return (
          <div class={`${colors.bg} border-2 ${colors.border} rounded-lg p-6 hover:shadow-xl transition-shadow`}>
            <h3 class={`text-2xl font-bold mb-3 ${colors.text}`}>
              {track.name}
            </h3>
            <p class="text-gray-700 mb-6">
              {track.description}
            </p>
            
            <div class="space-y-4">
              {track.talkIds.map(talkId => {
                const talk = talks[talkId];
                return (
                  <div class="bg-white rounded-lg p-4 shadow-sm border border-gray-200 relative talk-card">
                    <div class="flex items-start justify-between mb-2">
                      <h4 class="font-semibold text-gray-900 flex-1">
                        {talk.title}
                      </h4>
                      <span class={`${colors.text} font-mono text-sm font-bold ml-2`}>
                        {talk.time}
                      </span>
                    </div>
                    <p class="text-gray-600 text-sm flex items-center">
                      <svg class="w-4 h-4 mr-1" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"/>
                      </svg>
                      {talk.speaker}
                    </p>
                    
                    {/* Tooltip */}
                    <div class="talk-tooltip absolute z-10 bg-gray-900 text-white text-sm rounded-lg p-4 shadow-xl max-w-md w-max hidden opacity-0 transition-opacity duration-200 pointer-events-none">
                      <div class="relative">
                        <p class="leading-relaxed">{talk.description}</p>
                        <div class="absolute -top-2 left-4 w-4 h-4 bg-gray-900 transform rotate-45"></div>
                      </div>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        );
      })}
    </div>
  </div>
</section>

<style>
  /* Desktop-only hover behavior */
  @media (hover: hover) and (pointer: fine) {
    .talk-card:hover .talk-tooltip {
      display: block;
      opacity: 1;
    }
  }

  /* Position tooltip below the card */
  .talk-tooltip {
    bottom: auto;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    margin-top: 0.5rem;
    z-index: 50;
  }
</style>
